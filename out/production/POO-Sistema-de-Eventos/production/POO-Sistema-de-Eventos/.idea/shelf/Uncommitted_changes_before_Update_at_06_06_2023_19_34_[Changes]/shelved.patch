Index: src/eventos/Evento.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src.eventos;\n\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\nimport src.participantes.Organizador;\nimport src.participantes.Participante;\n\nimport javax.swing.*;\n\npublic class Evento {\n\n    // Atributos da Classe Evento\n    private String nome;\n    private String titulo;\n    private String data_inicio;\n    private String data_fim;\n    private String local;\n    private String horario_inicio;\n    private String carga_horaria;\n    private String descricao;\n    private String categoria;\n    private int limite_participantes;\n\n    private List<Participante> participantes = new ArrayList<>();\n    private List<Participante> presenca = new ArrayList<>();\n    private List<Organizador> organizadores = new ArrayList<>();\n    private Participante participante;\n\n\n    // Método Construtor\n\n    public Evento() {\n\n    }\n\n    public Evento(String nome, String titulo, String descricao,\n                  String categoria, String local, String data_inicio, String data_fim,\n                  String horario_inicio, String carga_horaria, int limite_participantes) {\n        this.nome = nome;\n        this.titulo = titulo;\n        this.data_inicio = data_inicio;\n        this.data_fim = data_fim;\n        this.local = local;\n        this.horario_inicio = horario_inicio;\n        this.carga_horaria = carga_horaria;\n        this.descricao = descricao;\n        this.categoria = categoria;\n        this.limite_participantes = limite_participantes;\n    }\n\n    // Métodos getters e setters da Classe Evento\n    public String getNome() {\n        return nome;\n    }\n\n    public void setNome(String nome) {\n        this.nome = nome;\n    }\n\n    public String getTitulo() {\n        return titulo;\n    }\n\n    public void setTitulo(String titulo) {\n        this.titulo = titulo;\n    }\n\n    public String getData_inicio() {\n        return data_inicio;\n    }\n\n    public void setData_inicio(String data_inicio) {\n        this.data_inicio = data_inicio;\n    }\n\n    public String getData_fim() {\n        return data_fim;\n    }\n\n    public void setData_fim(String data_fim) {\n        this.data_fim = data_fim;\n    }\n\n    public String getLocal() {\n        return local;\n    }\n\n    public void setLocal(String local) {\n        this.local = local;\n    }\n\n    public String getHorario_inicio() {\n        return horario_inicio;\n    }\n\n    public void setHorario_inicio(String horario_inicio) {\n        this.horario_inicio = horario_inicio;\n    }\n\n    public String getCarga_horaria() {\n        return carga_horaria;\n    }\n\n    public void setCarga_horaria(String carga_horaria) {\n        this.carga_horaria = carga_horaria;\n    }\n\n    public String getDescricao() {\n        return descricao;\n    }\n\n    public void setDescricao(String descricao) {\n        this.descricao = descricao;\n    }\n\n    public String getCategoria() {\n        return categoria;\n    }\n\n    public void setCategoria(String categoria) {\n        this.categoria = categoria;\n    }\n\n    public int getLimite_participantes() {\n        return limite_participantes;\n    }\n\n    public void setLimite_participantes(int limite_participantes) {\n        this.limite_participantes = limite_participantes;\n    }\n\n    public List<Participante> getParticipantes() {\n        return participantes;\n    }\n\n    public void setParticipantes(List<Participante> participantes) {\n        this.participantes = participantes;\n    }\n\n    public List<Organizador> getOrganizadores() {\n        return organizadores;\n    }\n\n    public void setOrganizadores(List<Organizador> organizadores) {\n        this.organizadores = organizadores;\n    }\n\n    public boolean validarEvento() {\n        boolean valido = true;\n\n        LocalDate dataAtual = LocalDate.now();\n\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");\n\n        LocalDate dataInicio = LocalDate.parse(getData_inicio(), formatter);\n\n        if (dataInicio.isBefore(dataAtual)) {\n            valido = false;\n        }\n\n        if (valido) {\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n\n    // Registrar Presença\n    public void registrarPresenca() {\n        int i;\n        participante.listarParticipantes(participantes);\n        i = Integer.parseInt(JOptionPane.showInputDialog(\"Insira o id do participante:\"));\n        presenca.add(participantes.get(i));\n    }\n\n\n\n\n}
===================================================================
diff --git a/src/eventos/Evento.java b/src/eventos/Evento.java
--- a/src/eventos/Evento.java	
+++ b/src/eventos/Evento.java	
@@ -173,10 +173,14 @@
 
     // Registrar Presença
     public void registrarPresenca() {
-        int i;
+        String i;
         participante.listarParticipantes(participantes);
-        i = Integer.parseInt(JOptionPane.showInputDialog("Insira o id do participante:"));
-        presenca.add(participantes.get(i));
+        i = JOptionPane.showInputDialog("Insira o cpf do participante:");
+        for (Participante participante : presenca){
+            if (i.equals(participante.getCpf())){
+                presenca.add(participante);
+            }
+        }
     }
 
 
